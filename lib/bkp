 StreamBuilder<QuerySnapshot>(
                  stream: _firestore.collection('perfil').snapshots(),
                  builder: (context, snapshot) {
                    if (!snapshot.hasData) {
                      return Center(
                        child: CircularProgressIndicator(
                          backgroundColor: Color(0xff15EBC4),
                        ),
                      );
                    }

                    final dados = snapshot.data.docs;
                    List<InputField> dadosWidgets = [];
                    for (var dado in dados) {
                      final dadoName = dado.get('name_prof');
                      final dadoFamName = dado.get('fam_name_prof');
                      final dadoAllergy = dado.get('allergy_prof');
                      final dadoBirth = dado.get('birth_prof');
                      final dadoDise = dado.get('dise_prof');
                      final dadoHealth = dado.get('health_prof');
                      final dadoHeight = dado.get('height_prof');
                      final dadoMAlergy = dado.get('m_allergy_prof');
                      final dadoMedici = dado.get('medicine_prof');
                      final dadoMom = dado.get('mom_name_prof');
                      final dadoNHealth = dado.get('n_health_prof');
                      final dadoProx = dado.get('prox_prof');
                      final dadoRG = dado.get('rg_prof');
                      final dadoSex = dado.get('sex_prof');
                      final dadoWeight = dado.get('weight_prof');
                      final dadoBlood = dado.get('blood_prof');
                      final dadoChoiceHealth = dado.get('choice_health_prof');

                      final dadosWidget = InputField(
                        textName: dadoName,
                        textFamName: dadoFamName,
                        textAllergy: dadoAllergy,
                        textBirth: dadoBirth,
                        textDise: dadoDise,
                        textHealth: dadoHealth,
                        textHeight: dadoHeight,
                        textMAlergy: dadoMAlergy,
                        textMedici: dadoMedici,
                        textMom: dadoMom,
                        textNHealth: dadoNHealth,
                        textProx: dadoProx,
                        textRG: dadoRG,
                        textSex: dadoSex,
                        textWeight: dadoWeight,
                        textBlood: dadoBlood,
                        textChoiceHealth: dadoChoiceHealth,
                      );

                      dadosWidgets.add(dadosWidget);
                    }
                    return Column(
                      children: dadosWidgets,
                    );
                  },
                ),






                import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
          appBar: AppBar(
            centerTitle: true,
            backgroundColor: Colors.deepPurple[400],
            title: Text("Multiple Checkbox Dynamically"),
          ),
          body: SafeArea(
              child: Center(
            child: DynamicallyCheckbox(),
          ))),
    );
  }
}

class DynamicallyCheckbox extends StatefulWidget {
  @override
  DynamicallyCheckboxState createState() => new DynamicallyCheckboxState();
}

class DynamicallyCheckboxState extends State {
  Map<String, bool> List = {
    'Hipertensão': false,
    'Diabetes': false,
    'Asma': false,
    'Câncer': false,
    'Artrite': false,
    'Insuficiência Renal': false,
    'Obesidade': false,
    'Depressão': false,
    'AVC': false,
    'Colesterol Alto': false,
  };

  var holder_1 = [];

  getItems() {
    List.forEach((key, value) {
      if (value == true) {
        holder_1.add(key);
      }
    });

    // Printing all selected items on Terminal screen.
    print(holder_1);
    // Here you will get all your selected Checkbox items.

    // Clear array after use.
    holder_1.clear();
  }

  @override
  Widget build(BuildContext context) {
    return Column(children: <Widget>[
      RaisedButton(
        child: Text(" Get Checked Checkbox Values "),
        onPressed: getItems,
        color: Colors.pink,
        textColor: Colors.white,
        splashColor: Colors.grey,
        padding: EdgeInsets.fromLTRB(10, 10, 10, 10),
      ),
      Expanded(
        child: ListView(
          children: List.keys.map((String key) {
            return new CheckboxListTile(
              title: new Text(key),
              value: List[key],
              activeColor: Colors.deepPurple[400],
              checkColor: Colors.white,
              onChanged: (bool value) {
                setState(() {
                  List[key] = value;
                });
              },
            );
          }).toList(),
        ),
      ),
    ]);
  }
}
